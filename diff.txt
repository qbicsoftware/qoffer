diff --git a/src/main/java/life/qbic/components/OfferGeneratorTab.java b/src/main/java/life/qbic/components/OfferGeneratorTab.java
index 798a320..88daef5 100644
--- a/src/main/java/life/qbic/components/OfferGeneratorTab.java
+++ b/src/main/java/life/qbic/components/OfferGeneratorTab.java
@@ -27,8 +27,7 @@ import com.vaadin.ui.themes.ValoTheme;
 import life.qbic.dbase.Database;
 
 import java.text.SimpleDateFormat;
-import java.util.Collection;
-import java.util.Date;
+import java.util.*;
 
 import org.apache.logging.log4j.Logger;
 import org.apache.logging.log4j.LogManager;
@@ -61,6 +60,10 @@ final class OfferGeneratorTab {
 		completeButton.setIcon(FontAwesome.CHECK_CIRCLE);
 		completeButton.setEnabled(false);
 
+		Button refreshButton = new Button("Refresh");
+		refreshButton.setDescription("Refresh the listed available packages");
+		refreshButton.setIcon(FontAwesome.SPINNER);
+
 		// get the package ids and names as a bean container
 		final BeanItemContainer<String> packageIdsAndNamesContainer = new BeanItemContainer<>(String.class);
 		packageIdsAndNamesContainer.addAll(db.getPackageIdsAndNames());
@@ -108,7 +111,7 @@ final class OfferGeneratorTab {
 		right.addComponent(packageDetailsLabel);
 
 		addListeners(db, managerTabs, selectedProjectComboBox, completeButton, addPackLayout,
-				selectPackagesTwinColSelect, packageDescriptionPanel, packageDetailsLabel, twinColSelectFilter);
+				selectPackagesTwinColSelect, packageDescriptionPanel, packageDetailsLabel, twinColSelectFilter, refreshButton);
 
 		addPackLayout.addComponent(selectedProjectComboBox);
 
@@ -131,7 +134,7 @@ final class OfferGeneratorTab {
 	private static void addListeners(Database db, TabSheet managerTabs, ComboBox selectedProjectComboBox,
 			Button completeButton, VerticalLayout addPackLayout,
 			TwinColSelect selectPackagesTwinColSelect, Panel packageDescriptionPanel,
-			Label packageDescriptionLabel, TextField twinColSelectFilter) {
+			Label packageDescriptionLabel, TextField twinColSelectFilter, Button refreshButton) {
 
 		final float[] totalPrice = new float[1];
 		final String[] descriptionText = new String[1];
@@ -155,6 +158,7 @@ final class OfferGeneratorTab {
 				} else {
 					addPackLayout.addComponent(twinColSelectFilter);
 					addPackLayout.addComponent(selectPackagesTwinColSelect);
+					addPackLayout.addComponent(refreshButton);
 					addPackLayout.addComponent(packageDescriptionPanel);
 					addPackLayout.addComponent(completeButton);
 				}
@@ -247,6 +251,25 @@ final class OfferGeneratorTab {
 
 		});
 
+		refreshButton.addClickListener(new Button.ClickListener() {
+
+			@Override
+			public void buttonClick(Button.ClickEvent event){
+				//refresh the content of the left TwinCol (read DB again)
+				final BeanItemContainer<String> packageIdsAndNamesContainer = new BeanItemContainer<>(String.class);
+				ArrayList<String> completePackageList = db.getPackageIdsAndNames();
+
+				packageIdsAndNamesContainer.addAll(completePackageList);
+				Object selectedValues = selectPackagesTwinColSelect.getValue();
+
+				//update list:
+				selectPackagesTwinColSelect.setContainerDataSource(packageIdsAndNamesContainer);
+				//select what was already selected
+				selectPackagesTwinColSelect.setValue(selectedValues);
+
+			}
+		});
+
 		completeButton.addClickListener(new Button.ClickListener() {
 
 			/**
diff --git a/src/main/java/life/qbic/components/OfferManagerTab.java b/src/main/java/life/qbic/components/OfferManagerTab.java
index 67e63c6..428bb6c 100644
--- a/src/main/java/life/qbic/components/OfferManagerTab.java
+++ b/src/main/java/life/qbic/components/OfferManagerTab.java
@@ -24,7 +24,6 @@ import com.vaadin.shared.data.sort.SortDirection;
 import com.vaadin.ui.*;
 import life.qbic.dbase.DBManager;
 import life.qbic.dbase.Database;
-import life.qbic.portal.portlet.QofferUIPortlet;
 import life.qbic.portal.utils.PortalUtils;
 import life.qbic.utils.Docx4jUtils;
 import life.qbic.utils.RefreshableGrid;
@@ -170,12 +169,15 @@ final class OfferManagerTab {
     offerManagerGrid.getColumn("offer_date").setHeaderCaption("Date").setEditable(false);
     offerManagerGrid.getColumn("last_edited").setHeaderCaption("Last edited").setEditable(false);
     offerManagerGrid.getColumn("added_by").setHeaderCaption("Added by").setEditable(false);
-    //add estimated delivery time TODO include into DB?
-//    offerManagerGrid.addColumn("offer_estimated_delivery").setHeaderCaption("Estimated Delivery");
+    //add estimated delivery also for OpenBIS (done for mariaDB)
+
+    offerManagerGrid.getColumn("estimated_delivery_weeks").setHeaderCaption("Estimated Delivery");
+
+
 
 
     offerManagerGrid.setColumnOrder("offer_id", "offer_project_reference", "offer_number", "offer_name",
-        "offer_description", "offer_total", "offer_facility", "offer_status", "offer_date", "last_edited", "added_by");
+        "offer_description", "offer_total", "offer_facility", "offer_status", "offer_date", "estimated_delivery_weeks", "last_edited", "added_by");
 
     offerManagerGrid.removeColumn("discount");
     offerManagerGrid.removeColumn("internal");
@@ -346,7 +348,7 @@ final class OfferManagerTab {
       }
     });
 
-    // adds the file creation and the export functionality to the print offer button (without FileDownloader)
+/*    // adds the file creation and the export functionality to the print offer button (without FileDownloader)
     generateOfferButton.addClickListener((Button.ClickListener) event -> {
       try {
         generateOfferFile(container, db, packageNames, packageDescriptions, packageCounts, packageUnitPrices,
@@ -359,9 +361,8 @@ final class OfferManagerTab {
         io.printStackTrace();
       }
 
-    });
+    });*/
 
-/* uncomment this if you want to use the FileDownloader BUT then it will generate two files
     try {
       setupOfferFileExportFunctionality(db, generateOfferButton, container, packageNames, packageDescriptions, packageCounts,
           packageUnitPrices, packageTotalPrices);
@@ -370,7 +371,7 @@ final class OfferManagerTab {
           "again.", "error");
       e.printStackTrace();
     }
-*/
+
 
     try {
       setupTableExportFunctionality(container, exportTableButton);
@@ -482,7 +483,7 @@ final class OfferManagerTab {
     // template .docx file containing the bindings
     //"/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX.docx"; //changed TempFile
     //String templateFileName = basePath + "/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_resizedTable_updated.docx"; //changed TempFile
-    String templateFileName = basePath + "/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_resizedTable_updated.docx"; //changed TempFile
+    String templateFileName = basePath + "/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_recolored.docx"; //changed TempFile
 
 
     String clientName =
@@ -493,6 +494,12 @@ final class OfferManagerTab {
         container.getItem(offerManagerGrid.getSelectedRow()).getItemProperty("offer_number").getValue()
             .toString();
 
+    String estimatedDeliveryWeeks = null;
+
+    if(container.getItem(offerManagerGrid.getSelectedRow()).getItemProperty("estimated_delivery_weeks").getValue() != null){
+      estimatedDeliveryWeeks = container.getItem(offerManagerGrid.getSelectedRow()).getItemProperty("estimated_delivery_weeks").getValue().toString()+" weeks";
+    }
+
     String[] address = db.getAddressForPerson(clientName);
     String groupAcronym = null;
     String institute = null;
@@ -545,6 +552,7 @@ final class OfferManagerTab {
       displayNotification("Offer name is null", "Warning: The offer name for the current offer is null." +
           "The respective fields in the .docx file will thus hold the placeholder values. Please consider " +
           "setting the offer name in the Offer Manager tab.", "warning");
+      //added to prevent fail if titel is null -> no download should be triggered
       return false;
     }
 
@@ -555,6 +563,7 @@ final class OfferManagerTab {
       displayNotification("Offer description is null.", "Warning: The offer description for the current " +
           "offer is null. The respective fields in the .docx file will thus hold the placeholder values. Please " +
           "consider setting the offer name in the Offer Manager tab.", "warning");
+      //added to prevent fail if description is null -> no download should be triggered
       return false;
     }
 
@@ -570,6 +579,9 @@ final class OfferManagerTab {
     SimpleDateFormat currentDateFormat = new SimpleDateFormat("EEEE, dd MMMM yyyy", Locale.ENGLISH);
     String currentDate = currentDateFormat.format(new Date());
 
+    //todo exchange delivery time in offer -> change in double clicked field is saved and written to file
+   // db.getDeliveryTime(db);
+
     // get the xml document holding the content for the bindings in the docx template file
     org.w3c.dom.Document contentControlDocument = readXMLFile(contentControlFilename);
 
@@ -590,6 +602,14 @@ final class OfferManagerTab {
     changeNodeTextContent(contentControlDocument, "estimated_total", formatCurrency(offerTotal));
     changeNodeTextContent(contentControlDocument, "date", currentDate);
 
+    if (estimatedDeliveryWeeks != null){
+      changeNodeTextContent(contentControlDocument, "delivery_time", estimatedDeliveryWeeks);
+    }else {
+      //the default value will be written
+      //but give a warning!
+      displayNotification("Estimated Delivery Time not entered", "The estimated delivery time will be set to the default value", "warning");
+    }
+
 
     // iterate over the packages and add them to the content control .xml file
     for (int i = packageNames.size()-1; i >= 0; i--) {
@@ -601,27 +621,40 @@ final class OfferManagerTab {
     // remove the placeholder rows in the .xml file
     removeRowInTable(contentControlDocument, packageNames.size());
 
-    LOG.info("TYPE {}", contentControlDocument.getDoctype());
     if(contentControlDocument.getDoctype() != null){
       throw new NullPointerException();
     }
+
     // apply the bindings to the .docx template file
     WordprocessingMLPackage wordProcessor = Docx4jUtils.applyBindings(contentControlDocument, templateFileName); //TODO error here!
 
-    //File tempFile = File.createTempFile(projectQuotationNumber, ".docx");
-    String home = System.getProperty("user.home");
-    File file = new File(home+"/Downloads/" + projectQuotationNumber + ".docx");
+    File tempFile = File.createTempFile(projectQuotationNumber, ".docx");
+    //String home = System.getProperty("user.home");
+    //File file = new File(home+"/Downloads/" + projectQuotationNumber + ".docx");
     // save updated document to output file
     try {
       assert wordProcessor != null;
-      wordProcessor.save(file, Docx4J.FLAG_SAVE_ZIP_FILE);
+      wordProcessor.save(tempFile, Docx4J.FLAG_SAVE_ZIP_FILE);
       LOG.info("SAVE FILE: done saving the File");
+
+      fileDownloader.setFileDownloadResource(new StreamResource(new StreamResource.StreamSource() {
+        @Override
+        public InputStream getStream () {
+          try {
+            return new FileInputStream(tempFile);
+          } catch (FileNotFoundException e) {
+            e.printStackTrace();
+          }
+          return null;
+        }
+      }, projectQuotationNumber+".docx"));
+      LOG.info("FILE DOWNLOADER: opened File downloader");
+      //new FileResource(tempFile)
+
     } catch (Docx4JException e) {
       e.printStackTrace();
     }
 
-    //fileDownloader.setFileDownloadResource(new FileResource(file));
-    //LOG.info("FILE DOWNLOADER: opened File downloader");
 
     return true;
   }
diff --git a/src/main/java/life/qbic/components/PackageManagerTab.java b/src/main/java/life/qbic/components/PackageManagerTab.java
index f5f0436..cf51b80 100644
--- a/src/main/java/life/qbic/components/PackageManagerTab.java
+++ b/src/main/java/life/qbic/components/PackageManagerTab.java
@@ -193,7 +193,7 @@ final class PackageManagerTab {
     }
 
     addListeners(db, addPackageButton, updatePackageGroupComboBox, updateSelectedPackageButton, deleteSelectedPackageButton,
-        container, packageGrid, exportTableButton);
+        container, packageGrid, exportTableButton, calculatePricesAutomaticallyCheckBox);
 
     packManHorizontalLayout.addComponent(addPackageButton);
     packManHorizontalLayout.addComponent(updatePackageGroupComboBox);
@@ -238,8 +238,9 @@ final class PackageManagerTab {
 
       @Override
       public void postCommit(FieldGroup.CommitEvent commitEvent) throws FieldGroup.CommitException {
+        calculatePrices(container,calculatePricesAutomatically,packageGrid);
 
-        if (calculatePricesAutomatically.getValue()) {
+ /*       if (calculatePricesAutomatically.getValue()) {
 
           // Get the internal package price from the selected row in the grid
           Object selected = ((Grid.SingleSelectionModel) packageGrid.getSelectionModel()).getSelectedRow();
@@ -295,7 +296,7 @@ final class PackageManagerTab {
           // set the respective fields in the grid, which also updates the database
           selectedRow.getItemProperty("package_price_external_academic").setValue(packagePriceExternalAcademic);
           selectedRow.getItemProperty("package_price_external_commercial").setValue(packagePriceExternalCommercial);
-        }
+        }*/
       }
     });
   }
@@ -314,7 +315,7 @@ final class PackageManagerTab {
    */
   private static void addListeners(Database db, Button addPackageButton, ComboBox updatePackageGroupComboBox,
                                    Button updateSelectedPackageButton, Button deleteSelectedPackageButton,
-                                   SQLContainer container, RefreshableGrid packageGrid, Button exportTableButton) throws IOException {
+                                   SQLContainer container, RefreshableGrid packageGrid, Button exportTableButton, CheckBox calculatePricesAutomaticallyCheckBox) throws IOException {
 
     addPackageButton.addClickListener(new Button.ClickListener() {
 
@@ -331,6 +332,8 @@ final class PackageManagerTab {
             "Please edit the package details! If the details are not complete, incompatibility " +
                 "issues are expected to happen.",
             "success");
+        container.refresh();
+        //packageGrid.
         packageGrid.clearSortOrder();
         packageGrid.sort("package_name", SortDirection.ASCENDING);
       }
@@ -350,6 +353,10 @@ final class PackageManagerTab {
         String selectedPackageGroup = updatePackageGroupComboBox.getValue().toString();
         String packageId = packageGrid.getSelectedRow().toString();
         db.updatePackageGroupForPackage(selectedPackageGroup, packageId);
+        //added: to update the price if the package group is changed
+        container.refresh();
+        //update price
+        calculatePrices(container,calculatePricesAutomaticallyCheckBox,packageGrid);
         container.refresh();
       }
     });
@@ -400,4 +407,72 @@ final class PackageManagerTab {
     fileDownloader.extend(exportTableButton);
 
   }
+
+  /**
+   * Method to calculate the price for internal and external clients
+   * @param container
+   * @param calculatePricesAutomaticallyCheckBox
+   * @param packageGrid
+   */
+  private static void calculatePrices(SQLContainer container, CheckBox calculatePricesAutomaticallyCheckBox, RefreshableGrid packageGrid) {
+
+    if (calculatePricesAutomaticallyCheckBox.getValue()) {
+
+      // Get the internal package price from the selected row in the grid
+      Object selected = ((Grid.SingleSelectionModel) packageGrid.getSelectionModel()).getSelectedRow();
+      if (selected == null) {
+        displayNotification("Price could not be automatically calculated", "Vaadin couldn't get " +
+                "the selected row, so the external prices have NOT been automatically calculated. If you wanted to " +
+                "update the prices, please select the row via left click and then try shift + enter to open the edit " +
+                "menu. Unfortunately this seems to be a little buggy..", "warning");
+        return;
+      }
+      Item selectedRow = container.getItem(selected);
+      String packagePriceInternalString = selectedRow.getItemProperty("package_price_internal").getValue().toString();
+
+      // get the internal price as BigDecimal to deal with floating point issues
+      BigDecimal packagePriceInternal = new BigDecimal(packagePriceInternalString);
+
+      // check if we have a package group for the current package
+      Object packageGroupObject = selectedRow.getItemProperty("package_group").getValue();
+      if (packageGroupObject == null) {
+        displayNotification("No package group", "Package has no package group associated with it. " +
+                        "Thus an automatic calculation of the external packages is NOT possible. Please update the package group" +
+                        "or disable the Auto-calculate external prices checkbox.",
+                "warning");
+        return;
+      }
+
+      String packageGroup = packageGroupObject.toString();
+
+      // based on the package group we have differnet price modifiers:
+      Float packagePriceExternalAcademic;
+      Float packagePriceExternalCommercial;
+      switch (packageGroup) {
+        case "Bioinformatics Analysis":
+        case "Project Management":
+          // recalculate the two external prices (*1.3 and *2.0)
+          packagePriceExternalAcademic = packagePriceInternal.multiply(externalAcademicPriceModifier).floatValue();
+          packagePriceExternalCommercial = packagePriceInternal.multiply(externalCommercialPriceModifier).floatValue();
+          break;
+        case "Sequencing":
+        case "Mass spectrometry":
+          // recalculate the two external prices (*1.1)
+          packagePriceExternalAcademic = packagePriceInternal.multiply(externalPriceModifier).floatValue();
+          packagePriceExternalCommercial = packagePriceInternal.multiply(externalPriceModifier).floatValue();
+          break;
+        default:  // package group is "Other"
+          displayNotification("Wrong package group", "Package has package group \"Other\" " +
+                          "associated with it. Thus an automatic calculation of the external packages is NOT possible. " +
+                          "Please change the package group or disable the Auto-calculate external prices checkbox.",
+                  "warning");
+          return;
+      }
+
+      // set the respective fields in the grid, which also updates the database
+      selectedRow.getItemProperty("package_price_external_academic").setValue(packagePriceExternalAcademic);
+      selectedRow.getItemProperty("package_price_external_commercial").setValue(packagePriceExternalCommercial);
+    }
+
+  }
 }
diff --git a/src/main/java/life/qbic/dbase/Database.java b/src/main/java/life/qbic/dbase/Database.java
index 1987a5d..7f61a49 100644
--- a/src/main/java/life/qbic/dbase/Database.java
+++ b/src/main/java/life/qbic/dbase/Database.java
@@ -936,6 +936,46 @@ public enum Database {
     return success;
   }
 
+//  public boolean updateDeliveryStatus(int delivery_time, String offer_id) {
+//    boolean success = false;
+//    String sql = "UPDATE offers SET estimated_delivery_weeks = ? WHERE offer_id = ? ";
+//    // The following statement is an try-with-resources statement, which declares two resources,
+//    // conn and statement, which will be automatically closed when the try block terminates
+//    try (Connection conn = login(); PreparedStatement statement = conn.prepareStatement(sql)) {
+//      statement.setInt(1, delivery_time);
+//      statement.setString(2, offer_id);
+//      int result = statement.executeUpdate();
+//      success = (result > 0);
+//    } catch (SQLException e) {
+//      e.printStackTrace();
+//    }
+//    try {
+//      conn.close();
+//    } catch (Exception e) { /* ignored */
+//    }
+//    return success;
+//  }
+//
+//  public int getDeliveryTime(int offer_id) {
+//    int time = 0;
+//    String sql = "SELECT estimated_delivery_weeks FROM offers WHERE offer_id = ?";
+//    // The following statement is an try-with-resources statement, which declares two resources,
+//    // conn and statement, which will be automatically closed when the try block terminates
+//    try (Connection conn = login(); PreparedStatement statement = conn.prepareStatement(sql)) {
+//      statement.setInt(1, offer_id);
+//      ResultSet rs = statement.executeQuery();
+//      if (rs.next())
+//        time = rs.getInt(1);
+//    } catch (SQLException e) {
+//      e.printStackTrace();
+//    }
+//    try {
+//      conn.close();
+//    } catch (Exception e) { /* ignored */
+//    }
+//    return time;
+//  }
+
   public String getOfferDiscount(String offer_id) {
     String discount = "0%";
     String sql = "SELECT discount FROM offers WHERE offer_id = ?";
@@ -1433,4 +1473,5 @@ public enum Database {
       e.printStackTrace();
     }
   }
+
 }
diff --git a/src/main/webapp/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_copy.docx b/src/main/webapp/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_copy.docx
deleted file mode 100644
index 83e2c6a..0000000
Binary files a/src/main/webapp/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_copy.docx and /dev/null differ
diff --git a/src/main/webapp/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_recolored.docx b/src/main/webapp/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_recolored.docx
index 21f1bb5..9858c2d 100644
Binary files a/src/main/webapp/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_recolored.docx and b/src/main/webapp/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_recolored.docx differ
diff --git a/src/main/webapp/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_resizedTable_updated.docx b/src/main/webapp/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_resizedTable_updated.docx
deleted file mode 100644
index 69b8195..0000000
Binary files a/src/main/webapp/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_resizedTable_updated.docx and /dev/null differ
diff --git a/src/main/webapp/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_save.docx b/src/main/webapp/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_save.docx
deleted file mode 100644
index 918a3ee..0000000
Binary files a/src/main/webapp/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_save.docx and /dev/null differ
diff --git a/src/main/webapp/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_test.docx b/src/main/webapp/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_test.docx
deleted file mode 100644
index 9858c2d..0000000
Binary files a/src/main/webapp/WEB-INF/resourceFiles/YYYYMMDD_PiName_QXXXX_test.docx and /dev/null differ
